{
 "https://stackoverflow.com/questions/tagged/javascript": {
  "link-que": {
   "https://stackoverflow.com/questions/64413073/mongoose-not-creating-indexes-auto-expire-document": {
    "answer": [
     "I'm trying to auto expire a document using this methods :",
     "But the document never expire, I tried different syntax, removing or adding \"autoIndex\" etc ... , but nothing will do. When checking indexes tab in Mongodb Compass I can clearly see the index created :\nhttps://i.stack.imgur.com/JNlKE.png. However when checking in the mongo shell db.myCollection.getIndexes() I can see all previous indexes except the one \"expireAt\" I just created. I'm confused :I"
    ],
    "question": [
     "Mongoose not creating indexes - auto expire document"
    ]
   },
   "https://stackoverflow.com/questions/64413078/how-to-set-up-custom-color-scale-with-multiple-sub-parts-in-d3": {
    "answer": [
     "I' trying to set up a custom colorScale for my legend. The Result should look like this:",
     "",
     "Due to the smooth Transitions it probably should be a d3.scaleLinear() but no matter what I try I cant figure out the way. I've tried  d3.scaleThreshold() wich at least seem to differentiate the domain-parts well enough.",
     "This seems to produce the best output right now, as in: each part gets its discrete color to the theshold.",
     "I've tried something like this, but that did also not work at all:",
     "This looks simple, but I cant figure it out.",
     "Just as a threshold scale, you can use more than 2 values in the linear scale range and domain, creating a piecewise scale:",
     "This is the result:",
     "",
     ""
    ],
    "question": [
     "How to set up custom color scale with multiple sub-parts in D3?"
    ]
   },
   "https://stackoverflow.com/questions/64413118/button-id-as-getelementbyid": {
    "answer": [
     "can I get in \"getElementById\" the button ID value, which triggered the function?",
     "I am trying to write universal function where getElementById should be same as button ID, so triggering function with button which has different button ID results in different getElementById..."
    ],
    "question": [
     "Button ID as getElementById"
    ]
   },
   "https://stackoverflow.com/questions/64413129/regex-for-checking-if-a-string-contains-character": {
    "answer": [
     "I'm trying to check if a string contains this character `.",
     "And if the character is found, to wrap that string between \u003cdiv\u003e.",
     "For example:",
     "should become:",
     "And I've tried to do it but it seem to not work:",
     "Any ideas?",
     "You can use",
     "The regex matches",
     "JavaScript demo",
     "",
     "",
     "I presume that the backtick should only appear at the beginning of the line. If it is also needed at the end, add another one before the $ in the regex.",
     "I also presume that your string is multiline, and any line can start with a backtick. If not, remove the m flag.",
     "If there can be more than one backtick-delimited substrings in a line, make the * quantifier non-greedy with ? and remove the ^ and $ assertions. If such substring can span several lines, also add s flag.",
     "",
     ""
    ],
    "question": [
     "Regex for checking if a string contains “`” character"
    ]
   },
   "https://stackoverflow.com/questions/64413132/firebase-app-named-app-already-exists-on-button-onclick": {
    "answer": [
     "I am sorry if my question has already been asked I have searched and no answer given has worked for me.",
     "I have a button with an onClick={this.send}. In my \"send\" function I have the function below",
     "const app5 = firebase.initializeApp({databaseURL: \" * link * \"}, 'app5'); \nfirebase.database(app5).ref(this.state.uid).update({ [Object] })",
     "The first time the button is pressed the function works perfectly but if the button is pressed a second time i have an error. (When I press a second time, the content to send is not the same)",
     "ERROR: Firebase: Firebase App named 'app5' already exists (app/duplicate-app)",
     "i have already put if (!firebase.apps.length) {firebase.initializeApp(firebaseConfig)} on top of my code..",
     "If you have an idea I'll be happy to try it or at least find out if it's not possible.\nThank you very much, have a good Sunday!"
    ],
    "question": [
     "'Firebase App named 'app' already exists' on Button onClick={..}"
    ]
   },
   "https://stackoverflow.com/questions/64413173/springboot-reactjs-firebases-realtime-database": {
    "answer": [
     "Back-end: Springboot\nFront-end: ReactJS\nCloudRepo: Firebase Realtime Database",
     "I get the JSON object in reactJS as :",
     "",
     "I am trying to resolve this into a specific format so that render this data over a chart or table.\nMy controller looks like this :",
     "",
     "My reactJS demo app looks like this:",
     "",
     "I am not sure why the deviceData is not getting accessed and rendered.\nI have verified that the state object is initialised well with the updated data. I am getting 'map is not a function' error while running this code.\nDo I need to use firebase SDK to convert the response in this case? Some guidance will be appreciated on where I am going wrong?"
    ],
    "question": [
     "Springboot + ReactJS + Firebase's Realtime Database"
    ]
   },
   "https://stackoverflow.com/questions/64413175/search-input-function-not-working-in-react-showing-object-object-in-the-fiel": {
    "answer": [
     "Hello guys I am new to react and trying to implement a search feature with an axios api call. I have this code but I am not able to enter a search term inside the field and whenever I click inside the input box it shows [object, Object] and can't type anything else. Can anyone help resolve the issue with the code I have and explain to me how to do it properly?",
     "This is how it is in the header",
     "// inside header function return",
     "This is from search,js",
     "Thanks"
    ],
    "question": [
     "Search input function not working in react, showing [object, Object] in the field instead of what we enter"
    ]
   },
   "https://stackoverflow.com/questions/64413179/cant-connect-to-node-server-via-socket-io-after-mapping-ipport-address-to-a-dom": {
    "answer": [
     "im very new to nodejs so bare with me",
     "so i have a nodejs server which i use to inject live data to my php/laravel website via socket.io\ni run my nodejs server in port 3001 and apache is using port 80",
     "so my node server is running on",
     "http://78.47.222.225:3001",
     "so i noticed clients who use vpn or proxy cant connect to my nodeserver address and websocket connection fails for them",
     "after asking in this question it was suggested its bcuz vpn is fire walling unusual ports",
     "nodejs server doesn't respond when clients use vpn or proxy",
     "so i maped a address to 3001 port , so basically",
     "http://bia2roll.com/server ---proxying---\u003e http://78.47.222.225:3001",
     "so now when i go to http://bia2roll.com/server i get",
     "which means its working but in my homepage http://bia2roll.com  when i try to connect to the server via socket.io it fails ... homepage source",
     "not sure why is this happening but in my console i see it trying to connect to this address",
     "but shouldn't it try the bia2roll.com/server/socket.io ? considering i gave http://bia2roll.com/server to io.connect ?",
     "it works fine when i try connecting via ip:port ... try this address to connect via ip:port instead of proxy address",
     "http://bia2roll.com?port=1"
    ],
    "question": [
     "cant connect to node server via socket.io after mapping ip:port address to a domain withouth port"
    ]
   },
   "https://stackoverflow.com/questions/64413203/the-state-is-not-updated-via-the-usestate-hook-the-first-time": {
    "answer": [
     "The state is updated only on the next keystroke but with the previous state. Screen 1",
     "When you click on updateForm (), it is also empty, only after the second click, the state is updated. Screen 2",
     "I understand that this is due to asynchrony, but in this case I do not know how to use it.",
     "\n",
     "Your code is working fine. You just doing console.log before the state is updated. State updates happen not when you using an update state function. It's happening when all component action and nested components actions are done.",
     "Check your code with console log on another place click to check",
     "As you can see I placed a console log on every Home component rerender. You can check that all works fine.",
     "P.S. I did some improvements to your code. Check if u like it. And add a comment to updateForm function. Check this one too, please.",
     "You evidently are not setting your state properly, here",
     "should be"
    ],
    "question": [
     "The state is not updated via the useState hook the first time"
    ]
   },
   "https://stackoverflow.com/questions/64413220/api-does-not-run-with-axios-but-running-with-fetch": {
    "answer": [
     "I am testing a simple API, when I use the fetch method it runs completely fine. The following is the code",
     "However the same thing when I change to axios it does not work, what am I missing when using axios? Any help would be appreciated. The axios code is as below:",
     "Try in this way:",
     "And then, call the method by the code below:",
     "Note that the api_base_url has to substituted by your endpoint base URL.",
     "Hope it helps you out."
    ],
    "question": [
     "API does not run with axios but running with fetch"
    ]
   },
   "https://stackoverflow.com/questions/64413237/add-hash-correctly-to-url-with-jquery": {
    "answer": [
     "I am a bit confused, because I just want to add a hash to an existing url via varibale and open it via a href.",
     "Example:",
     "Result (browser url) after clicking on this link:",
     "If I am right, a correct hash link should look like this ...",
     "... without the \"/\" after subpage.",
     "So, I am correct or it doesn't matter? If yes, how can I change it?",
     "I also realized that my browser(s) change my url from https://website.com/subpage#test to https://website.com/subpage/#test if I just add it in the browser bar and press enter. Is that new?",
     "Maybe it is important to know that I use wordpress?",
     "You could check whether the string in your href attribute starts with a slash and remove it then:"
    ],
    "question": [
     "Add “#” hash correctly to url with jquery"
    ]
   },
   "https://stackoverflow.com/questions/64413246/react-hook-usestate-can-not-set-full-value-of-array-after-being-filter": {
    "answer": [
     "i am trying to set value of an array after being filter as the default value of useState, here is the sample code:",
     "this is what it printed after set debugger, as you can see, array \"studentList\" has 91 items, array \"selectedWarningStudents\" has 3 items match with 3 item in the array \"selected\". So nothing is unexpected here",
     "",
     "after get the array \"selectedWarningStudents\" i want to set its value as default value in the useState that i set below",
     "but when i log the console it return an array that contains only first item from array \"selectedWarningStudents\", here:",
     "",
     "thank you for taking time to help me out, have a good day",
     "Most probably you are getting the studentList data via an async way. So, since you want to set a state instead of using a derived state, your state can't catch up. Though, in this case, I expect to see no data at all but you can try this:",
     "But, instead of doing this you can derive the data and use it, maybe with React.useMemo",
     "In this case, you don't have any mailList state, because you are deriving the data from Context data.",
     "By the way, I don't know where do flattenSocreList and selected come from, in any case I added them into the dependency arrays. Change it according to your needs."
    ],
    "question": [
     "React Hook “useState” can not set full value of array after being filter"
    ]
   },
   "https://stackoverflow.com/questions/64413249/how-to-append-a-circle-with-a-label-to-indicate-information-to-rectangle-node-an": {
    "answer": [
     "I have a vertical D3JS tree where the nodes are rectangles.  I would like to append a circle with the italic letter \"i\" to the top right corner of the rectangle node to indicate that the node has additional information.  I managed to append the italic letter \"i\" only, however, I am not able to put it in a circle and still keep the node clickable. Also I use cloning for downloading the tree as a SVG file and would like to remove this appended circle and the letter \"i\" from the cloned group element before downloading and printing.",
     "The node append code:",
     "The clone and download code:"
    ],
    "question": [
     "how to append a circle with a label to indicate information to rectangle node and remove the circle before download"
    ]
   },
   "https://stackoverflow.com/questions/64413250/returning-a-value-from-a-promise-then": {
    "answer": [
     "I have a function foo which makes an asynchronous request. How can I return the response/result from foo?",
     "I tried returning the value from the callback, as well as assigning the result to a local variable inside the function and returning that one, but none of those ways actually return the response (they all return undefined or whatever the initial value of the variable result is).",
     "Example using jQuery's ajax function:",
     "Example using node.js:",
     "Example using the then block of a promise:",
     "→ For a more general explanation of async behaviour with different examples, please see Why is my variable unaltered after I modify it inside of a function? - Asynchronous code reference",
     "→ If you already understand the problem, skip to the possible solutions below.",
     "The A in Ajax stands for asynchronous . That means sending the request (or rather receiving the response) is taken out of the normal execution flow. In your example, $.ajax returns immediately and the next statement, return result;, is executed before the function you passed as success callback was even called.",
     "Here is an analogy which hopefully makes the difference between synchronous and asynchronous flow clearer:",
     "Imagine you make a phone call to a friend and ask him to look something up for you. Although it might take a while, you wait on the phone and stare into space, until your friend gives you the answer that you needed.",
     "The same is happening when you make a function call containing \"normal\" code:",
     "Even though findItem might take a long time to execute, any code coming after var item = findItem(); has to wait until the function returns the result.",
     "You call your friend again for the same reason. But this time you tell him that you are in a hurry and he should call you back on your mobile phone. You hang up, leave the house, and do whatever you planned to do. Once your friend calls you back, you are dealing with the information he gave to you.",
     "That's exactly what's happening when you do an Ajax request.",
     "Instead of waiting for the response, the execution continues immediately and the statement after the Ajax call is executed. To get the response eventually, you provide a function to be called once the response was received, a callback (notice something? call back ?). Any statement coming after that call is executed before the callback is called.",
     "Embrace the asynchronous nature of JavaScript! While certain asynchronous operations provide synchronous counterparts (so does \"Ajax\"), it's generally discouraged to use them, especially in a browser context.",
     "Why is it bad do you ask?",
     "JavaScript runs in the UI thread of the browser and any long-running process will lock the UI, making it unresponsive. Additionally, there is an upper limit on the execution time for JavaScript and the browser will ask the user whether to continue the execution or not.",
     "All of this is a really bad user experience. The user won't be able to tell whether everything is working fine or not. Furthermore, the effect will be worse for users with a slow connection.",
     "In the following we will look at three different solutions that are all building on top of each other:",
     "All three are available in current browsers, and node 7+.",
     "The ECMAScript version released in 2017 introduced syntax-level support for asynchronous functions. With the help of async and await, you can write asynchronous in a \"synchronous style\". The code is still asynchronous, but it's easier to read/understand.",
     "async/await builds on top of promises: an async function always returns a promise. await \"unwraps\" a promise and either result in the value the promise was resolved with or throws an error if the promise was rejected.",
     "Important: You can only use await inside an async function. Right now, top-level await isn't yet supported, so you might have to make an async IIFE (Immediately Invoked Function Expression) to start an async context.",
     "You can read more about async and await on MDN.",
     "Here is an example that builds on top of delay above:",
     "Current browser and node versions support async/await. You can also support older environments by transforming your code to ES5 with the help of regenerator (or tools that use regenerator, such as Babel).",
     "A callback is when function 1 is passed to function 2. Function 2 can call function 1 whenever it is ready. In the context of an asynchronous process, the callback will be called whenever the asynchronous process is done. Usually, the result is passed to the callback.",
     "In the example of the question, you can make foo accept a callback and use it as success callback. So this",
     "becomes",
     "Here we defined the function \"inline\" but you can pass any function reference:",
     "foo itself is defined as follows:",
     "callback will refer to the function we pass to foo when we call it and we pass it on to success. I.e. once the Ajax request is successful, $.ajax will call callback and pass the response to the callback (which can be referred to with result, since this is how we defined the callback).",
     "You can also process the response before passing it to the callback:",
     "It's easier to write code using callbacks than it may seem. After all, JavaScript in the browser is heavily event-driven (DOM events). Receiving the Ajax response is nothing else but an event.\nDifficulties could arise when you have to work with third-party code, but most problems can be solved by just thinking through the application flow.",
     "The Promise API is a new feature of ECMAScript 6 (ES2015), but it has good browser support already. There are also many libraries which implement the standard Promises API and provide additional methods to ease the use and composition of asynchronous functions (e.g. bluebird).",
     "Promises are containers for future values. When the promise receives the value (it is resolved) or when it is canceled (rejected), it notifies all of its \"listeners\" who want to access this value.",
     "The advantage over plain callbacks is that they allow you to decouple your code and they are easier to compose.",
     "Here is an example of using a promise:",
     "Applied to our Ajax call we could use promises like this:",
     "Describing all the advantages that promise offer is beyond the scope of this answer, but if you write new code, you should seriously consider them. They provide a great abstraction and separation of your code.",
     "More information about promises: HTML5 rocks - JavaScript Promises",
     "Deferred objects are jQuery's custom implementation of promises (before the Promise API was standardized). They behave almost like promises but expose a slightly different API.",
     "Every Ajax method of jQuery already returns a \"deferred object\" (actually a promise of a deferred object) which you can just return from your function:",
     "Keep in mind that promises and deferred objects are just containers for a future value, they are not the value itself. For example, suppose you had the following:",
     "This code misunderstands the above asynchrony issues. Specifically, $.ajax() doesn't freeze the code while it checks the '/password' page on your server - it sends a request to the server and while it waits, it immediately returns a jQuery Ajax Deferred object, not the response from the server. That means the if statement is going to always get this Deferred object, treat it as true, and proceed as though the user is logged in. Not good.",
     "But the fix is easy:",
     "As I mentioned, some(!) asynchronous operations have synchronous counterparts. I don't advocate their use, but for completeness' sake, here is how you would perform a synchronous call:",
     "If you directly use a XMLHttpRequest object, pass false as third argument to .open.",
     "If you use jQuery, you can set the async option to false. Note that this option is deprecated since jQuery 1.8.\nYou can then either still use a success callback or access the responseText property of the jqXHR object:",
     "If you use any other jQuery Ajax method, such as $.get, $.getJSON, etc., you have to change it to $.ajax (since you can only pass configuration parameters to $.ajax).",
     "Heads up! It is not possible to make a synchronous JSONP request. JSONP by its very nature is always asynchronous (one more reason to not even consider this option).",
     "Your code should be something along the lines of this:",
     "Felix Kling did a fine job writing an answer for people using jQuery for AJAX, I've decided to provide an alternative for people who aren't.",
     "(Note, for those using the new fetch API, Angular or promises I've added another answer below)",
     "This is a short summary of \"Explanation of the problem\" from the other answer, if you're not sure after reading this, read that.",
     "The A in AJAX stands for asynchronous. That means sending the request (or rather receiving the response) is taken out of the normal execution flow. In your example, .send returns immediately and the next statement, return result;, is executed before the function you passed as success callback was even called.",
     "This means when you're returning, the listener you've defined did not execute yet, which means the value you're returning has not been defined.",
     "Here is a simple analogy",
     "(Fiddle)",
     "The value of a returned is undefined since the a=5 part has not executed yet. AJAX acts like this, you're returning the value before the server got the chance to tell your browser what that value is.",
     "One possible solution to this problem is to code re-actively , telling your program what to do when the calculation completed.",
     "This is called CPS. Basically, we're passing getFive an action to perform when it completes, we're telling our code how to react when an event completes (like our AJAX call, or in this case the timeout).",
     "Usage would be:",
     "Which should alert \"5\" to the screen. (Fiddle).",
     "There are basically two ways how to solve this:",
     "As for synchronous AJAX, don't do it! Felix's answer raises some compelling arguments about why it's a bad idea. To sum it up, it'll freeze the user's browser until the server returns the response and create a very bad user experience. Here is another short summary taken from MDN on why:",
     "XMLHttpRequest supports both synchronous and asynchronous communications. In general, however, asynchronous requests should be preferred to synchronous requests for performance reasons.",
     "In short, synchronous requests block the execution of code... ...this can cause serious issues...",
     "If you have to do it, you can pass a flag: Here is how:",
     "Let your function accept a callback. In the example code foo can be made to accept a callback. We'll be telling our code how to react when foo completes.",
     "So:",
     "Becomes:",
     "Here we passed an anonymous function, but we could just as easily pass a reference to an existing function, making it look like:",
     "For more details on how this sort of callback design is done, check Felix's answer.",
     "Now, let's define foo itself to act accordingly",
     "(fiddle)",
     "We have now made our foo function accept an action to run when the AJAX completes successfully, we can extend this further by checking if the response status is not 200 and acting accordingly (create a fail handler and such). Effectively solving our issue.",
     "If you're still having a hard time understanding this read the AJAX getting started guide at MDN.",
     "XMLHttpRequest 2 (first of all read the answers from Benjamin Gruenbaum \u0026 Felix Kling)",
     "If you don't use jQuery and want a nice short XMLHttpRequest 2 which works on the modern browsers and also on the mobile browsers I suggest to use it this way:",
     "As you can see:",
     "There are two ways to get the response of this Ajax call (three using the XMLHttpRequest var name):",
     "The simplest:",
     "Or if for some reason you bind() the callback to a class:",
     "Example:",
     "Or (the above one is better anonymous functions are always a problem):",
     "Nothing easier.",
     "Now some people will probably say that it's better to use onreadystatechange or the even the XMLHttpRequest variable name. That's wrong.",
     "Check out XMLHttpRequest advanced features",
     "It supported all *modern browsers. And I can confirm as I'm using this approach since XMLHttpRequest 2 exists. I never had any type of problem on all browsers I use.",
     "onreadystatechange is only useful if you want to get the headers on state 2.",
     "Using the XMLHttpRequest variable name is another big error as you need to execute the callback inside the onload/oreadystatechange closures else you lost it.",
     "Now if you want something more complex using post and FormData you can easily extend this function:",
     "Again ... it's a very short function, but it does get \u0026 post.",
     "Examples of usage:",
     "Or pass a full form element (document.getElementsByTagName('form')[0]):",
     "Or set some custom values:",
     "As you can see I didn't implement sync... it's a bad thing.",
     "Having said that ... why don't do it the easy way?",
     "As mentioned in the comment the use of error \u0026\u0026 synchronous does completely break the point of the answer. Which is a nice short way to use Ajax in the proper way?",
     "Error handler",
     "In the above script, you have an error handler which is statically defined so it does not compromise the function. The error handler can be used for other functions too.",
     "But to really get out an error the only way is to write a wrong URL in which case every browser throws an error.",
     "Error handlers are maybe useful if you set custom headers, set the responseType to blob array buffer or whatever...",
     "Even if you pass 'POSTAPAPAP' as the method it won't throw an error.",
     "Even if you pass 'fdggdgilfdghfldj' as formdata it won't throw an error.",
     "In the first case the error is inside the displayAjax() under this.statusText as Method not Allowed.",
     "In the second case, it simply works. You have to check at the server side if you passed the right post data.",
     "cross-domain not allowed throws error automatically.",
     "In the error response, there are no error codes.",
     "There is only the this.type which is set to error.",
     "Why add an error handler if you totally have no control over errors?\nMost of the errors are returned inside this in the callback function displayAjax().",
     "So: No need for error checks if you're able to copy and paste the URL properly. ;)",
     "PS: As the first test I wrote x('x', displayAjax)..., and it totally got a response...??? So I checked the folder where the HTML is located, and there was a file called 'x.xml'. So even if you forget the extension of your file XMLHttpRequest 2 WILL FIND IT. I LOL'd",
     "Read a file synchronous",
     "Don't do that.",
     "If you want to block the browser for a while load a nice big .txt file synchronous.",
     "Now you can do",
     "There is no other way to do this in a non-asynchronous way. (Yeah, with setTimeout loop... but seriously?)",
     "Another point is... if you work with APIs or just your own list's files or whatever you always use different functions for each request...",
     "Only if you have a page where you load always the same XML/JSON or whatever you need only one function. In that case, modify a little the Ajax function and replace b with your special function.",
     "The functions above are for basic use.",
     "If you want to EXTEND the function...",
     "Yes, you can.",
     "I'm using a lot of APIs and one of the first functions I integrate into every HTML page is the first Ajax function in this answer, with GET only...",
     "But you can do a lot of stuff with XMLHttpRequest 2:",
     "I made a download manager (using ranges on both sides with resume, filereader, filesystem), various image resizers converters using canvas, populate web SQL databases with base64images and much more... But in these cases you should create a function only for that purpose... sometimes you need a blob, array buffers, you can set headers, override mimetype and there is a lot more...",
     "But the question here is how to return an Ajax response... (I added an easy way.)",
     "This means AngularJS, jQuery (with deferred), native XHR's replacement (fetch), EmberJS, BackboneJS's save or any node library that returns promises.",
     "Your code should be something along the lines of this:",
     "Felix Kling did a fine job writing an answer for people using jQuery with callbacks for AJAX. I have an answer for native XHR. This answer is for generic usage of promises either on the frontend or backend. ",
     "The JavaScript concurrency model in the browser and on the server with NodeJS/io.js is asynchronous and reactive.",
     "Whenever you call a method that returns a promise, the then handlers are always executed asynchronously - that is, after the code below them that is not in a .then handler.",
     "This means when you're returning data the then handler you've defined did not execute yet. This in turn means that the value you're returning has not been set to the correct value in time. ",
     "Here is a simple analogy for the issue:\n",
     "",
     "The value of data is undefined since the data = 5 part has not executed yet. It will likely execute in a second but by that time it is irrelevant to the returned value.",
     "Since the operation did not happen yet (AJAX, server call, IO, timer) you're returning the value before the request got the chance to tell your code what that value is.",
     "One possible solution to this problem is to code re-actively , telling your program what to do when the calculation completed. Promises actively enable this by being temporal (time-sensitive) in nature.",
     "A Promise is a value over time. Promises have state, they start as pending with no value and can settle to:",
     "A promise can only change states once after which it will always stay at the same state forever. You can attach then handlers to promises to extract their value and handle errors. then handlers allow chaining of calls. Promises are created by using APIs that return them. For example, the more modern AJAX replacement fetch or jQuery's $.get return promises.",
     "When we call .then on a promise and return something from it - we get a promise for the processed value. If we return another promise we'll get amazing things, but let's hold our horses.",
     "Let's see how we can solve the above issue with promises. First, let's demonstrate our understanding of promise states from above by using the Promise constructor for creating a delay function:",
     "Now, after we converted setTimeout to use promises, we can use then to make it count:",
     "",
     "",
     "Basically, instead of returning a value which we can't do because of the concurrency model - we're returning a wrapper for a value that we can unwrap with then. It's like a box you can open with then.",
     "This stands the same for your original API call, you can:",
     "So this works just as well. We've learned we can't return values from already asynchronous calls but we can use promises and chain them to perform processing. We now know how to return the response from an asynchronous call.",
     "ES6 introduces generators which are functions that can return in the middle and then resume the point they were at. This is typically useful for sequences, for example:",
     "Is a function that returns an iterator over the sequence 1,2,3,3,3,3,.... which can be iterated. While this is interesting on its own and opens room for a lot of possibility there is one particular interesting case.",
     "If the sequence we're producing is a sequence of actions rather than numbers - we can pause the function whenever an action is yielded and wait for it before we resume the function. So instead of a sequence of numbers, we need a sequence of future values - that is: promises.",
     "This somewhat tricky but very powerful trick lets us write asynchronous code in a synchronous manner. There are several \"runners\" that do this for you, writing one is a short few lines of code but is beyond the scope of this answer. I'll be using Bluebird's Promise.coroutine here, but there are other wrappers like co or Q.async. ",
     "This method returns a promise itself, which we can consume from other coroutines. For example:",
     "In ES7, this is further standardized, there are several proposals right now but in all of them you can await promise. This is just \"sugar\" (nicer syntax) for the ES6 proposal above by adding the async and await keywords. Making the above example:",
     "It still returns a promise just the same :)",
     "You are using Ajax incorrectly. The idea is not to have it return anything, but instead hand off the data to something called a callback function, which handles the data.",
     "That is:",
     "Returning anything in the submit handler will not do anything. You must instead either hand off the data, or do what you want with it directly inside the success function.",
     "The simplest solution is create a JavaScript function and call it for the Ajax success callback.",
     "I will answer with a horrible-looking, hand-drawn comic. The second image is the reason why result is undefined in your code example.",
     "",
     "For people who are using AngularJS, can handle this situation using Promises.",
     "Here it says,",
     "Promises can be used to unnest asynchronous functions and allows one to chain multiple functions together.",
     "You can find a nice explanation here also.",
     "Example found in docs mentioned below.",
     "In Angular2 with look at the following example, but its recommended to use Observables with Angular2.",
     "}",
     "You can consume that in this way,",
     "See the original post here. But Typescript does not support native es6 Promises, if you want to use it, you might need plugin for that.",
     "Additionally here is the promises spec define here.",
     "Most of the answers here give useful suggestions for when you have a single async operation, but sometimes, this comes up when you need to do an asynchronous operation for each entry in an array or other list-like structure. The temptation is to do this:",
     "Example:",
     "",
     "",
     "The reason that doesn't work is that the callbacks from doSomethingAsync haven't run yet by the time you're trying to use the results.",
     "So, if you have an array (or list of some kind) and want to do async operations for each entry, you have two options: Do the operations in parallel (overlapping), or in series (one after another in sequence).",
     "You can start all of them and keep track of how many callbacks you're expecting, and then use the results when you've gotten that many callbacks:",
     "Example:",
     "",
     "",
     "(We could do away with expecting and just use results.length === theArray.length, but that leaves us open to the possibility that theArray is changed while the calls are outstanding...)",
     "Notice how we use the index from forEach to save the result in results in the same position as the entry it relates to, even if the results arrive out of order (since async calls don't necessarily complete in the order in which they were started).",
     "But what if you need to return those results from a function? As the other answers have pointed out, you can't; you have to have your function accept and call a callback (or return a Promise). Here's a callback version:",
     "Example:",
     "",
     "",
     "Or here's a version returning a Promise instead:",
     "Of course, if doSomethingAsync passed us errors, we'd use reject to reject the promise when we got an error.)",
     "Example:",
     "",
     "",
     "(Or alternately, you could make a wrapper for doSomethingAsync that returns a promise, and then do the below...)",
     "If doSomethingAsync gives you a Promise, you can use Promise.all:",
     "If you know that doSomethingAsync will ignore a second and third argument, you can just pass it directly to map (map calls its callback with three arguments, but most people only use the first most of the time):",
     "Example:",
     "",
     "",
     "Note that Promise.all resolves its promise with an array of the results of all of the promises you give it when they are all resolved, or rejects its promise when the first of the promises you give it rejects.",
     "Suppose you don't want the operations to be in parallel? If you want to run them one after another, you need to wait for each operation to complete before you start the next. Here's an example of a function that does that and calls a callback with the result:",
     "(Since we're doing the work in series, we can just use results.push(result) since we know we won't get results out of order. In the above we could have used results[index] = result;, but in some of the following examples we don't have an index to use.)",
     "Example:",
     "",
     "",
     "(Or, again, build a wrapper for doSomethingAsync that gives you a promise and do the below...)",
     "If doSomethingAsync gives you a Promise, if you can use ES2017+ syntax (perhaps with a transpiler like Babel), you can use an async function with for-of and await:",
     "Example:",
     "",
     "",
     "If you can't use ES2017+ syntax (yet), you can use a variation on the \"Promise reduce\" pattern (this is more complex than the usual Promise reduce because we're not passing the result from one into the next, but instead gathering up their results in an array):",
     "Example:",
     "",
     "",
     "...which is less cumbersome with ES2015+ arrow functions:",
     "Example:",
     "",
     "",
     "Have a look at this example:",
     "As you can see getJoke is returning a resolved promise (it is resolved when returning res.data.value). So you wait until the $http.get request is completed and then console.log(res.joke) is executed (as a normal asynchronous flow).",
     "This is the plnkr:",
     "http://embed.plnkr.co/XlNR7HpCaIhJxskMJfSg/",
     "ES6 way (async - await)",
     "This is one of the places which two ways data binding or store concept that's used in many new JavaScript frameworks will work great for you...",
     "So if you are using Angular, React or any other frameworks which do two ways data binding or store concept this issue is simply fixed for you, so in easy word, your result is undefined at the first stage, so you have got result = undefined before you receive the data, then as soon as you get the result, it will be updated and get assigned to the new value which response of your Ajax call...",
     "But how you can do it in pure javascript or jQuery for example as you asked in this question?",
     "You can use a callback, promise and recently observable to handle it for you, for example in promises we have some function like success() or then() which will be executed when your data is ready for you, same with callback or subscribe function on observable.",
     "For example in your case which you are using jQuery, you can do something like this:",
     "For more information study about promises and observables which are newer ways to do this async stuffs.",
     "It's a very common issue we face while struggling with the 'mysteries' of JavaScript. Let me try demystifying this mystery today.",
     "Let's start with a simple JavaScript function:",
     "That's a simple synchronous function call (where each line of code is 'finished with its job' before the next one in sequence), and the result is same as expected.",
     "Now let's add a bit of twist, by introducing little delay in our function, so that all lines of code are not 'finished' in sequence. Thus, it will emulate the asynchronous behavior of function :",
     "So there you go, that delay just broke the functionality we expected! But what exactly happened ? Well, it's actually pretty logical if you look at the code. the function foo(), upon execution, returns nothing (thus returned value is undefined), but it does start a timer, which executes a function after 1s to return 'wohoo'. But as you can see, the value that's assigned to bar is the immediately returned stuff from foo(), which is nothing i.e. just undefined.",
     "So, how do we tackle this issue?",
     "Let's ask our function for a PROMISE.\nPromise is really about what it means : it means that the function guarantees you to provide with any output it gets in future. so let's see it in action for our little problem above : ",
     "Thus, the summary is - to tackle the asynchronous functions like ajax based calls etc., you can use a promise to resolve the value (which you intend to return). Thus, in short you resolve value instead of returning, in asynchronous functions.",
     "Apart from using then/catch to work with promises, there exists one more approach. The idea is to recognize an asynchronous function and then wait for the promises to resolve, before moving to the next line of code. It's still just the promises under the hood, but with a different syntactical approach. To make things clearer, you can find a comparison below:",
     "Another approach to return a value from an asynchronous function, is to pass in an object that will store the result from the asynchronous function.",
     "Here is an example of the same:",
     "I am using the result object to store the value during the asynchronous operation. This allows the result be available even after the asynchronous job.",
     "I use this approach a lot. I would be interested to know how well this approach works where wiring the result back through consecutive modules is involved.",
     "While promises and callbacks work fine in many situations, it is a pain in the rear to express something like:",
     "You'd end up going through async1; check if name is undefined or not and call the callback accordingly.",
     "While it is okay in small examples it gets annoying when you have a lot of similar cases and error handling involved.",
     "Fibers helps in solving the issue.",
     "You can checkout the project here.",
     "The following example I have written shows how to",
     "This working example is self-contained. It will define a simple request object that uses the window XMLHttpRequest object to make calls. It will define a simple function to wait for a bunch of promises to be completed.",
     "Context. The example is querying the Spotify Web API endpoint in order to search for playlist objects for a given set of query strings:",
     "For each item, a new Promise will fire a block - ExecutionBlock, parse the result, schedule a new set of promises based on the result array, that is a list of Spotify user objects and execute the new HTTP call within the ExecutionProfileBlock asynchronously.",
     "You can then see a nested Promise structure, that lets you spawn multiple and completely asynchronous nested HTTP calls, and join the results from each subset of calls through Promise.all.",
     "NOTE\nRecent Spotify search APIs will require an access token to be specified in the request headers:",
     "So, you to run the following example you need to put your access token in the request headers:",
     "",
     "",
     "I have extensively discussed this solution here.",
     "Short answer is, you have to implement a callback like this:",
     "This is quite simple:",
     "Here's a working version of your code:",
     "await is supported in all current browsers and node 8",
     "Js is a single threaded.",
     "Browser can be divided into three parts:",
     "1)Event Loop",
     "2)Web API",
     "3)Event Queue",
     "Event Loop runs for forever i.e kind of infinite loop.Event Queue is where all your function are pushed on some event(example:click) this is one by one carried out of queue and put into Event loop which execute this function and prepares it self for next one after first one is executed.This means Execution of one function doesn't starts till the function before it in queue is executed in event loop.",
     "Now let us think we pushed two functions in a queue one is for getting a data from server and another utilises that data.We pushed the serverRequest() function in queue first then utiliseData() function. serverRequest function goes in event loop and makes a call to server as we never know how much time it will take to get data from server\nso this process is expected to take time and so we busy our event loop thus hanging our page, that's where Web API come into role it take this function from event loop and deals with server making event loop free so that we can execute next function from queue.The next function in queue is utiliseData() which goes in loop but because of no data available it goes waste and execution of next function continues till end of the queue.(This is called Async calling i.e we can do something else till we get data)",
     "Let suppose our serverRequest() function had a return statement in a code, when we get back data from server Web API will push it in queue at the end of queue.\nAs it get pushed at end in queue we cannot utilise its data as there is no function left in our queue to utilise this data.Thus it is not possible to return something from Async Call.",
     "Thus Solution to this is callback or promise.",
     "A Image from one of the answers here, Correctly explains callback use...\nWe give our function(function utilising data returned from server) to function calling server.",
     "",
     "In my Code it is called as",
     "Javscript.info callback",
     "You can use this custom library (written using Promise) to make a remote call.",
     "Simple usage example:",
     "Another solution is to execute code via sequential executor nsynjs.",
     "nsynjs will evaluate all promises sequentially, and put promise result into data property:",
     "",
     "",
     "Step 1. Wrap function with callback into nsynjs-aware wrapper (if it has promisified version, you can skip this step):",
     "Step 2. Put synchronous logic into function:",
     "Step 3. Run function in synchronous manner via nsynjs:",
     "Nsynjs will evaluate all operators and expressions step-by-step, pausing execution in case if result of some slow function is not ready.",
     "More examples here: https://github.com/amaksr/nsynjs/tree/master/examples",
     "ECMAScript 6 has 'generators' which allow you to easily program in an asynchronous style.",
     "To run the above code you do this:",
     "If you need to target browsers that don't support ES6 you can run the code through Babel or closure-compiler to generate ECMAScript 5.",
     "The callback ...args are wrapped in an array and destructured when you read them so that the pattern can cope with callbacks that have multiple arguments. For example with node fs:",
     "",
     "",
     "We find ourselves in a universe which appears to progress along a dimension we call \"time\". We don't really understand what time is, but we have developed abstractions and vocabulary that let us reason and talk about it: \"past\", \"present\", \"future\", \"before\", \"after\".",
     "The computer systems we build--more and more--have time as an important dimension. Certain things are set up to happen in the future. Then other things need to happen after those first things eventually occur. This is the basic notion called \"asynchronicity\". In our increasingly networked world, the most common case of asynchronicity is waiting for some remote system to respond to some request.",
     "Consider an example. You call the milkman and order some milk. When it comes, you want to put it in your coffee. You can't put the milk in your coffee right now, because it is not here yet. You have to wait for it to come before putting it in your coffee. In other words, the following won't work:",
     "Because JS has no way to know that it needs to wait for order_milk to finish before it executes put_in_coffee. In other words, it does not know that order_milk is asynchronous--is something that is not going to result in milk until some future time. JS, and other declarative languages execute one statement after another without waiting.",
     "The classic JS approach to this problem, taking advantage of the fact that JS supports functions as first-class objects which can be passed around, is to pass a function as a parameter to the asynchronous request, which it will then invoke when it has completed its task sometime in the future. That is the \"callback\" approach. It looks like this:",
     "order_milk kicks off, orders the milk, then, when and only when it arrives, it invokes put_in_coffee.",
     "The problem with this callback approach is that it pollutes the normal semantics of a function reporting its result with return; instead, functions must not reports their results by calling a callback given as a parameter. Also, this approach can rapidly become unwieldy when dealing with longer sequences of events. For example, let's say that I want to wait for the milk to be put in the coffee, and then and only then perform a third step, namely drinking the coffee. I end up needing to write something like this:",
     "where I am passing to put_in_coffee both the milk to put in it, and also the action (drink_coffee) to execute once the milk has been put in. Such code becomes hard to write, and read, and debug.",
     "In this case, we could rewrite the code in the question as:",
     "This was the motivation for the notion of a \"promise\", which is a particular type of value which represents a future or asynchronous outcome of some sort. It can represent something that already happened, or that is going to happen in the future, or might never happen at all. Promises have a single method, named then, to which you pass an action to be executed when the outcome the promise represents has been realized.",
     "In the case of our milk and coffee, we design order_milk to return a promise for the milk arriving, then specify put_in_coffee as a then action, as follows:",
     "One advantage of this is that we can string these together to create sequences of future occurrences (\"chaining\"):",
     "Let's apply promises to your particular problem. We will wrap our request logic inside a function, which returns a promise:",
     "Actually, all we've done is added a return to the call to $.ajax. This works because jQuery's $.ajax already returns a kind of promise-like thing. (In practice, without getting into details, we would prefer to wrap this call so as for return a real promise, or use some alternative to $.ajax that does so.) Now, if we want to load the file and wait for it to finish and then do something, we can simply say ",
     "for instance,",
     "When using promises, we end up passing lots of functions into then, so it's often helpful to use the more compact ES6-style arrow functions:",
     "But there's still something vaguely dissatisfying about having to write code one way if synchronous and a quite different way if asynchronous. For synchronous, we write",
     "but if a is asynchronous, with promises we have to write",
     "Above, we said, \"JS has no way to know that it needs to wait for the first call to finish before it executes the second\". Wouldn't it be nice if there was some way to tell JS that? It turns out that there is--the await keyword, used inside a special type of function called an \"async\" function. This feature is part of the upcoming version of ES but is already available in transpilers such as Babel given the right presets. This allows us to simply write",
     "In your case, you would be able to write something like ",
     "Short answer: Your foo() method returns immediately, while the $ajax() call executes asynchronously after the function returns. The problem is then how or where to store the results retrieved by the async call once it returns.",
     "Several solutions have been given in this thread. Perhaps the easiest way is to pass an object to the foo() method, and to store the results in a member of that object after the async call completes.",
     "Note that the call to foo() will still return nothing useful. However, the result of the async call will now be stored in result.response.",
     "Use a callback() function inside the foo() success.\nTry in this way. It is simple and easy to understand.  ",
     "The most perfect answer to this question is using Promise.",
     "There is a problem with using promises!",
     "I was using this solution for a while until I figured out there is an error in old browsers:",
     "So i decided to implement my own Promise class for ES3 to below js compilers if its not defined. Just add this code before your main code and then safely use Promise!",
     "The question was: ",
     "How do I return the response from an asynchronous call?",
     "which CAN be interpreted as: ",
     "How to make asynchronous code look synchronous?",
     "The solution will be to avoid callbacks, and use a combination of Promises and async/await.",
     "I would like to give an example for a Ajax request. ",
     "(Although it can be written in Javascript, I prefer to write it in Python, and compile it to Javascript using Transcrypt. It will be clear enough.)",
     "Lets first enable JQuery usage, to have $ available as S:",
     "Define a function which returns a Promise, in this case an Ajax call:",
     "Use the asynchronous code as if it were synchronous:",
     "Of course there are many approaches like synchronous request, promise, but from my experience I think you should use the callback approach. It's natural to asynchronous behavior of Javascript.\nSo, your code snippet can be rewrite a little different:",
     "After reading all the responses here and with my experiences, I would like to resume the detail of\ncallback, promise and async/await for the asynchronous programming in JavaScript.",
     "1) Callback : The fundamental reason for a callback is to run code in response of an event (see the example below). We use callback in JavaScript every time.",
     "But if you must use many nested callbacks in the example below, it will be fairy terrible for the code refactoring.",
     "2) Promise : a syntax ES6 - Promise resolves the callback hell issue !",
     "myFirstPromise is a Promise instance that represents the process of async codes. The resolve function signals that the Promise instance has finished. Afterwards, we can call .then() (a chain of .then as you want) and .catch() on the promise instance:",
     "3) Async/Await : a new syntax ES6 - Await is basically sugar syntax of Promise !",
     "Async function provide us with a clean and concise syntax that enables us to write less code to accomplish the same outcome we would get with promises. Async/Await looks similar to synchronous code, and synchronous code is much easier to read and write. To catch errors with Async/Await, we can use the block try...catch. In here, you don't need to write a chain of .then() of Promise syntax.",
     "Conclusion : These are totally the three syntaxs for asynchronous\nprogramming in JavaScript that you shoud well understand. So if possible, I\nrecommend that you should use \"promise\" or \"async/await\" for\nrefactoring your asynchronous codes (mostly for XHR requests) !",
     "Rather than throwing code at you, there are 2 concepts that are key to understanding how JS handles callbacks and asynchronicity. (is that even a word?) ",
     "There are three things you need to be aware of; The queue; the event loop and the stack",
     "In broad, simplistic terms, the event loop is like the project manager, it is constantly listening for any functions that want to run and communicates between the queue and the stack. ",
     "Once it receives a message to run something it adds it to the queue. The queue is the list of things that are waiting to execute (like your AJAX request). imagine it like this:",
     "When one of these messages is going to execute it pops the message from the queue and creates a stack, the stack is everything JS needs to execute to perform the instruction in the message. So in our example it's being told to call foobarFunc",
     "So anything that foobarFunc needs to execute (in our case anotherFunction) will get pushed onto the stack. executed, and then forgotten about - the event loop will then move onto the next thing in the queue (or listen for messages)",
     "The key thing here is the order of execution. That is ",
     "When you make a call using AJAX to an external party or run any asynchronous code (a setTimeout for example), Javascript is dependant upon a response before it can proceed.",
     "The big question is when will it get the response? The answer is we don't know - so the event loop is waiting for that message to say \"hey run me\". If JS just waited around for that message synchronously your app would freeze and it will suck. So JS carries on executing the next item in the queue whilst waiting for the message to get added back to the queue.",
     "That's why with asynchronous functionality we use things called callbacks. It's kinda like a promise quite literally. As in I promise to return something at some point jQuery uses specific callbacks called deffered.done deffered.fail and deffered.always (amongst others). You can see them all here",
     "So what you need to do is pass a function that is promised to execute at some point with data that is passed to it.",
     "Because a callback is not executed immediately but at a later time it's important to pass the reference to the function not it executed. so",
     "so most of the time (but not always) you'll pass foo not foo()",
     "Hopefully that will make some sense. When you encounter things like this that seem confusing - i highly recommend reading the documentation fully to at least get an understanding of it. It will make you a much better developer."
    ],
    "question": [
     "How do I return the response from an asynchronous call?"
    ]
   },
   "https://stackoverflow.com/questions/64413260/populate-a-nested-schema-with-model-having-nested-schema-in-mongoose": {
    "answer": [
     "User Model with categorySchema nested into userSchema:",
     "Budget model with revenueSchema nested into budgetSchema ,",
     "In revenueSchema, the categoryData property contains the object Id of document created in categorySchema which is nested in User Model.\nSo whenever there is a 'find' query in Budget Model, I want to populate categoryData in Budget model with it's corresponding id document from categorySchema in User Model.\nI have tried, but I am getting null as response in categoryData.",
     "Please help"
    ],
    "question": [
     "Populate a nested schema with Model having nested schema in mongoose"
    ]
   },
   "https://stackoverflow.com/questions/64413306/reactjs-redux-form-and-material-ui-framework-autocomplete-field": {
    "answer": [
     "I am building a nested form framework that uses the redux form and material ui framework -- I've built the components here to date - https://codesandbox.io/s/bold-sunset-uc4t5",
     "what I would like to do - is add an autocomplete field -- that only shows the possible results after 3 chars have been typed.",
     "https://material-ui.com/components/autocomplete/",
     "I want it to have similar properties/styles to the text field and select box"
    ],
    "question": [
     "reactjs - redux form and material ui framework — autocomplete field"
    ]
   },
   "https://stackoverflow.com/questions/64413307/remove-gap-from-infinite-scroll-element-vanilla-js": {
    "answer": [
     "when one cycle is complete then you can see the gap.. I want to get rid of it.\nit will re-cycle one after another without creating gap.",
     "would anyone can give me some times to resolve this..",
     "",
     "",
     "In your scrollEelement function, where you check if you need to restart the scroll, you can check if the current top position is less than the negative value of the height on one of the \".item\" divs.  If it is, remove the first item from the div and append it again at the end.  As these divs have a height of 45px, as soon as the childElement div's top is less then -45, the top \".item\" div is no longer visible and can be removed and replaced at the end of the div - and adjust the childElement's top to add back on the 45px for the removed item.  So:",
     "",
     ""
    ],
    "question": [
     "remove gap from infinite scroll element vanilla js"
    ]
   },
   "https://stackoverflow.com/questions/64413329/create-table-form-json": {
    "answer": [
     "I am trying to create a table from JSON. And I think I have a problem with my link but not also. No data appears on my table. My error are :",
     "Cannot read property 'symbol' of undefined\n'Uncaught TypeError: Cannot read property 'symbol' of undefined\nat Object. (main.js:14)\nat Function.each (jquery.min.js:2)\nat Object.success (main.js:11)\nat u (jquery.min.js:2)\nat Object.fireWith [as resolveWith] (jquery.min.js:2)\nat k (jquery.min.js:2)\nat XMLHttpRequest.'",
     "Here is my JS Code",
     "Thank you",
     "Check if the value exists and set to an empty string if the value does not exist.",
     "You are looping through json.bpi which will give you USD,GBP..etc so just use value.keyname to get particular values from json object.",
     "Demo Code :",
     "",
     ""
    ],
    "question": [
     "Create table form JSON"
    ]
   },
   "https://stackoverflow.com/questions/64413332/typescript-object-oriented-orm": {
    "answer": [
     "The company I'm working with has part of its object-oriented database, this should be something simple to deal with, however, I'm not being able to find ORMs that work with this database model in typescript, I tried to sequelize and it didn't work right, I was told TypeORM but I still couldn't find support in the documentation. Situations that I have to deal with in the database model is something like generalization and specialization, I have a table that only has ID for 'person', and I have two tables that derive from that table which is the 'individual' and eaa ' legal person ', both tables share the same id, dealing with this in the orm has become extremely expressive and the problem with just using querybuilders is that operations like filtering and others become more complex. I would like to know if there is a possibility to work with object-oriented banks in typeorm and how I would do that."
    ],
    "question": [
     "typescript object-oriented orm"
    ]
   },
   "https://stackoverflow.com/questions/64413335/creating-dynamic-rows-in-a-table-and-auto-save-using-jquery-and-boostrap-and-jav": {
    "answer": [
     "I added a screenshot of my work, I need to add each row as textbox to get input values from user and I need a add or remove button to add and remove a row, also I need to store these values to be auto saved without hitting submit button, suppose if the user changes a text box, changed value to be auto saved if existing values changed and a row removed by user that need to updated in oracle database\nenter image description here",
     "There is a lot to unpack in your question. Your question is most likely going to get closed for being to broad.",
     "My answer here is more of an overview for where you can find additional information.  You will want to do some research and put some effort into your work.  If you get stuck on a specific piece then ask that specific question here, being sure to include relevant code samples.",
     "I need to add each row as textbox to get input values from user",
     "I need a add or remove button to add and remove a row",
     "I need to store these values to be auto saved without hitting submit\nbutton",
     "suppose if the user changes a text box, changed value to be auto saved\nif existing values changed"
    ],
    "question": [
     "creating dynamic rows in a table and auto save using jquery and boostrap and javascript"
    ]
   },
   "https://stackoverflow.com/questions/64413365/is-there-a-way-to-define-nullable-record-in-typescript": {
    "answer": [
     "I have an interface in TypeScript.",
     "I would like to make salary as a nullable field (Like we can do in C#). Is this possible to do in TypeScript?",
     "All fields in JavaScript (and in TypeScript) can have the value null or undefined.",
     "You can make the field optional which is different from nullable.",
     "Compare with:",
     "Union type is in my mind best option in this case:",
     "EDIT : For this to work as expected, you should enable the strictNullChecks in tsconfig. ",
     "To be more C# like, define the Nullable type like this:",
     "Bonus:",
     "To make Nullable behave like a built in Typescript type, define it in a global.d.ts definition file in the root source folder. This path worked for me: /src/global.d.ts",
     "Just add a question mark ? to the optional field.",
     "You can just implement a user-defined type like the following:",
     "i had this same question a while back.. all types in ts are nullable, because void is a subtype of all types (unlike, for example, scala).",
     "see if this flowchart helps - https://github.com/bcherny/language-types-comparison#typescript",
     "Nullable type can invoke runtime error.\nSo I think it's good to use a compiler option --strictNullChecks and declare number | null as type. also in case of nested function, although input type is null, compiler can not know what it could break, so I recommend use !(exclamination mark).",
     "Reference.\nhttps://www.typescriptlang.org/docs/handbook/advanced-types.html#type-guards-and-type-assertions"
    ],
    "question": [
     "How to declare a type as nullable in TypeScript?"
    ]
   },
   "https://stackoverflow.com/questions/64413368/how-can-i-make-it-so-javascript-detects-different-display-sizes-and-then-goes-to": {
    "answer": [
     "I recently made a website and for what ever reason it looks really odd on moblie with over lapping Divs etc. I coded this:",
     "",
     "",
     "Inch is not used for responsive design. Px is important. A screen can be big but its pixel value can be low. So don't use inch.",
     "Your function is triggered when you resize the browser. If you want to set all changes on page load, you should create the same function and call it when the page finishes loading.",
     "Creating a different index file for a mobile view is a very bad practice, unless you hide something very heavy on mobile, or creating a completely different web page. Almost all layout and design changes can and should be done in CSS."
    ],
    "question": [
     "How can I make it so javascript detects different display sizes and then goes to a website depending on the size?"
    ]
   },
   "https://stackoverflow.com/questions/64413390/how-to-set-radius-and-change-it-dynamically-with-reactjs": {
    "answer": [
     "I'm still a beginner in working with google maps and ReactJS. I'm using google-maps-react to plot my map.",
     "I have a property that is rendered on the map. This property is a set of several polygons, all of these polygons together form the property (farm).",
     "When I click on a particular polygon, I get all the coordinates of that polygon that was clicked:",
     "",
     "I would like to know, is it possible to show a 10km radius surrounded by the selected polygon?",
     "From what I've researched, it is possible to show a radius through a single point, that is, a single latitude, and a single longitude.\nIn my case, a polygon can have hundreds of latitutes and hundreds of longitutes. As you can see in the image above.",
     "Can you tell me how do I configure a 10km radius based on the polygon that was selected?",
     "I put my code into codesandbox",
     "Here where I plot my map:",
     "",
     "",
     "Thank you in advance."
    ],
    "question": [
     "How to set radius and change it dynamically with ReactJS?"
    ]
   },
   "https://stackoverflow.com/questions/64413397/how-to-design-this-ui": {
    "answer": [
     "I have an array, it contains four important variable such as \"row\", \"column\", \"lenght\" \u0026 \"width\", Now using this, I need to create and place elements in respective places using \"row\" \u0026 \"column\", for example take a look at the pic below, how to design a ui like this with the given array !:",
     "",
     "0,1,2,3 are rows and 0 - 9 are columns !",
     "But, what am i getting is a straight line of placements,",
     "this is the code am using to iterate through the array:",
     "And i have added a snack check this snack with all the codes and array at bottom - please do check,",
     "And note:",
     "We can use the above data to form a layout i believe !"
    ],
    "question": [
     "How to design this UI?"
    ]
   },
   "https://stackoverflow.com/questions/64413402/color-area-under-area-spline-curve": {
    "answer": [
     "I need to select a range between two points on the x-axis and give them a different colour, can I do this using only one graph?"
    ],
    "question": [
     "Color area under area spline curve"
    ]
   },
   "https://stackoverflow.com/questions/64413445/how-to-match-ashu-arun-akshu-andaman-amaze-in-repeat-with-many-different-names": {
    "answer": [
     "I am looking for a regex where i have one or more words (possibly should cover alpha numeric also) separated by spaces (one or more spaces)",
     "Above are some examples of it",
     "I wrote a regex to see what is repeating for #1",
     "so i wanted to do something like {3} for repeating section.",
     "But it does not seem to work.. I cant believe it is this difficult.",
     "If you do not care just how many words you have, this would work:",
     "\\w is any alphanumeric. Replace it with a-zA-Z if you need only letters.",
     "I think you need something like this,",
     "DEMO",
     "OR",
     "DEMO"
    ],
    "question": [
     "Regex for one or more words separated by spaces"
    ]
   },
   "https://stackoverflow.com/questions/64413469/reactjs-redux-form-and-material-ui-framework-image-cropper": {
    "answer": [
     "I am building a nested form framework that uses the redux form and material ui framework -- I've built the components here to date - https://codesandbox.io/s/gracious-mcnulty-v5wds",
     "what I would like to do - is add an image cropper that activates on image upload",
     "so here is a basic image uploader concept",
     "is there something that could be built more bespoke and cleaner without having to install another module that maybe has forced styles.",
     "I am also curious - if the cropper tool could be clever - and create 3 image sizes for the server to take -- so a cropped thumb, cropped medium, cropped large, original",
     "https://www.thepolyglotdeveloper.com/2020/02/scale-crop-zoom-images-react-web-application/\nhttps://www.npmjs.com/package/cropperjs\nhttps://medium.com/swlh/adding-crop-before-upload-in-react-22dfcf3a95b7\nhttps://levelup.gitconnected.com/crop-images-on-upload-in-your-react-app-with-react-image-crop-5f3cd0ad2b35\nhttps://codesandbox.io/s/q8q1mnr01w?file=/src/index.js\nIs there any good way to connect react-image-crop with react-dropzone?\nhttps://reactjsexample.com/a-react-component-to-crop-images-with-easy-interactions/"
    ],
    "question": [
     "reactjs - redux form and material ui framework — image cropper"
    ]
   },
   "https://stackoverflow.com/questions/64413502/scrap-javascript-hidden-link-with-python-and-beautiful-soup": {
    "answer": [
     "I try to scrap data from this page",
     "I want to :",
     "I'm blocked on the 1. step because the link  links are hidden and populate with javascript. Each href is hidden and replace by :   javascript:__doPostBack('ctl00$ctl00$ContentPlaceHolderGlobal$ContentPlaceHolderContenu$RadGrid1$ctl00$ctl04$ctl00','')\"",
     "I've made some research and find this script and made my own soup but it doesn't return any data. Just to mention i'm a beginner in python so i've tried to adapt but not sure where i'm wrong."
    ],
    "question": [
     "Scrap javascript hidden link with python and Beautiful soup"
    ]
   },
   "https://stackoverflow.com/questions/64413511/counter-variable-issue-with-javascript": {
    "answer": [
     "In a React app, I got a state variable that's set to 0 at first.",
     "The functionality i'm looking for is to add/remover product in a redux store.",
     "So if a user presses a \"+\" button, it will check if amount is now bigger than 0,\nand if so it'll dispatch an action to the store.\nBut what I'm getting is that only after the second \"+\" press, when the value of amount is already 2,\nthe action is actually dispatched.\nThis is the code :",
     "What am I missing?",
     "State is updated asynchronously, so when you call updateStore right after calling setAmount, state hasn't updated yet, so updateStore function sees the old value of amount.",
     "When you click the second time, it works because now the updated value of amount will be 2 and the old value that updateStore function will use is 1, so the condition if (amount \u003e= 1) evaluates to true and as a result the action is dispatched.",
     "You can fix this problem using one of the following options:",
     "Pass the new value of amount to updateStore function as an argument",
     "Use the useEffect hook that executes whenever amount changes. Just move the code inside updateStore function inside useEffect hook and add amount in the dependency array of the useEffect hook.",
     "and remove the updateStore function, you don't need it if you use the useEffect hook."
    ],
    "question": [
     "Counter variable issue with JavaScript"
    ]
   },
   "https://stackoverflow.com/questions/64413523/undefined-is-not-an-object-evaluating-this-camera": {
    "answer": [
     "Im trying to show the camera feed from the selfie camera inside of a \u003cView\u003e component, and I've been getting this error constantly. I've tried reinstalling react-native-camera and using expo-camera\n, but im all out of ideas.\nCode:",
     "The error message"
    ],
    "question": [
     "Undefined is not an object (evaluating '_this.camera')"
    ]
   },
   "https://stackoverflow.com/questions/64413525/i-get-input-error-in-twitch-chatbot-using-javascript": {
    "answer": [
     "I want to extend my Twitch chat by adding how many wins I have and how many Kills I got in those games",
     "I used this API and the Chat commands to add new commands look like this",
     "I wrote these 4 lines to add the functionality",
     "I can add new wins with !addwin and I can see it with the URL with my publicKey inserted in the URL, but when I type !wins, I get the error \"Unexpected end of input\" although !wins is correctly written"
    ],
    "question": [
     "I get input error in Twitch Chatbot using Javascript"
    ]
   },
   "https://stackoverflow.com/questions/64413543/module-exports-not-exporting-functions-to-other-file": {
    "answer": [
     "I have a file that contains some helper functions and a file that uses them.",
     "Helpers.js",
     "index.js",
     "the problem is that I get _foo is not defined.",
     "I searched for why this would happen and didn't find an answer."
    ],
    "question": [
     "“module.exports” not exporting functions to other file"
    ]
   },
   "https://stackoverflow.com/questions/64413549/how-to-create-a-custom-page-patameter-in-birt-report-and-fire-it-within-the-repo": {
    "answer": [
     "I'm new to birt report and  I need help with paramater validation, and I found one way to validate parameters is to create a custom page parameter jsp. I don't know how to fire this jsp from within the report. Can any one help by explaining or pointing me to a good direction..\nThanx."
    ],
    "question": [
     "how to create a custom page patameter in birt report and fire it within the report"
    ]
   },
   "https://stackoverflow.com/questions/64413563/how-to-get-words-from-array-of-html": {
    "answer": [
     "I have an html file, I want to rewrite the file by translitting all the Cyrillic letters into Latin. How can I read the file word by word? so, before translitting I can check the word for the exception. I'm using JavaScript.",
     "Thank you."
    ],
    "question": [
     "How to get words from array of html"
    ]
   },
   "https://stackoverflow.com/questions/64413570/how-can-i-get-the-specific-user-information-from-the-list-of-users-upon-click-in": {
    "answer": [
     "I am writing a firebase mini chat web app where an admin can be able to privately chat with all the authenticated users.",
     "so I used the firebase cloud-function to fetch the list of all users, code: 👇",
     "And from the front-end I called the cloud-function and displayed users using map method. 👇",
     "Users are listed successfully. My problem now is if admin click on a specific user, I can be able to get or grab that specific user information like, id, displayName, etc.",
     "thanks as you help me out🙏🙏🙏"
    ],
    "question": [
     "How can I get the specific user information from the list of users upon click in Javascript?"
    ]
   },
   "https://stackoverflow.com/questions/64413580/sending-a-post-request-to-jsonplaceholder-fails-in-react-redux": {
    "answer": [
     "I made a simple React Redux application that fetches a list of posts from jsonplaceholder and within it is a form that allows users to send a POST request. When I send a post request according to Redux DevTools extension it is added successfully marked as post number 101. Here is its snapshot",
     "",
     "but the problem is after clicking the submit button 3 times it shows up on the screen.",
     "",
     "The first two clicks show neither the title nor its body but it starts showing up on the third click.\nThis is Posts.jsx file and here is how I used componentDidUpdate to update the component after post request.",
     "Here is its GitHub link repository.\nThe only error I am getting is the below error.",
     "I don't believe this has anything to do with rendering the new post, but I already specified a \"key\" while looping through components.",
     "What I am doing wrong during the course of this post request? Thank You."
    ],
    "question": [
     "Sending a post request to jsonplaceholder fails in React Redux"
    ]
   },
   "https://stackoverflow.com/questions/64413581/edit-an-embed-already-sent": {
    "answer": [
     "I´m using a normal code to send a embed via webhook to discord with node JS.\nWhat i want to do ( i saw it is possible) is to edit and embed already sent.\nI have tried doing on the last line `hook.edit(embed) but it is not working maybe i need to do other thing?",
     "Thanks a lot!\nBtw, here is where i saw is possible edit an embed already sent. Using commnad hook.send(embed) it is working fine !\nhttps://discordjs.guide/popular-topics/embeds.html#resending-a-received-embed"
    ],
    "question": [
     "EDIT AN EMBED ALREADY SENT"
    ]
   },
   "https://stackoverflow.com/questions/64413587/and-or-combination-in-javascript": {
    "answer": [
     "Task explained shortly:\nMaking a datingsite, that need 4 outcomes. Woman 25 and above, Woman 24 and below. Man 25 and above, Woman 24 and below. Now I want to have 4 more outcomes; all womans, all men, all 25 and above, all 24 and below.",
     "I just started on my bachelor degree in August and have not coded anything before.\nI am now working on a few tasks that we got, this is a task that we had to deliver that was work requierment. I delivered it with arrays and got the job done with it, and with one else if statement more. Everything good so far.\nBut now later on, we just learned about object literals, and I wanted to check if I could do the code somehow shorter. I actually did with only 1x if statement below.",
     "I am struggling with OR || and \u0026\u0026 combinations. I've seen some threads on it, saying that parantheses should be placed before and after \u0026\u0026, but I can't seem to get it. The below code does work with the 4 possible combinations, I wanted to check if someone can see how I can add || \u0026\u0026 combinations more smarter to get the 4 more combinations that I want, in the same if-statement? Or do I have to make a new else if statement?\nAlso, how would you solve this, what type of storing variables would you go for?\nI have thougth about using some parameters in the function, to shorten something, but I could not come up with something, yet.",
     "You have one common part with gender and another with age which is either smaller than 25 or equal or greater than 25.",
     "You need no parenthese around comparisons.",
     "As per the description, I think you are looking to create different array with some condition if so.",
     "const allMale = data.profiles.filter(profile =\u003e profile.gender === 'male') // will give you all men",
     "cont allFemale =data.profiles.filter(profile =\u003e profile.gender === 'female' \u0026\u0026 profile.age \u003e = 25) // will give you all female",
     "const genderFemale = data.profiles.filter(profile =\u003e profile.gender === 'female' \u0026\u0026 profile.age \u003c= 24) // All female with age less than age 24.\nAnd so on try the JavaScript filter function"
    ],
    "question": [
     "AND \u0026\u0026 OR || combination in JavaScript"
    ]
   },
   "https://stackoverflow.com/questions/64413604/i-want-to-add-day-labels-to-the-calendar-in-d3-js-for-this-example": {
    "answer": [
     "",
     "",
     "",
     "",
     "Please work it out for me"
    ],
    "question": [
     "I want to add day labels to the calendar in d3.js for this example"
    ]
   },
   "https://stackoverflow.com/questions/64413618/multiple-html-to-single-html-file": {
    "answer": [
     "Did anybody knows how to make my five HTML files into single HTML file using Javascript only? I still don't know and don't get it. Or did anyone know the right keyword?"
    ],
    "question": [
     "Multiple HTML to single HTML file"
    ]
   },
   "https://stackoverflow.com/questions/64413621/upsert-is-not-updating-existing-document": {
    "answer": [
     "Mongo creates a new document if it doesn't already exist (must have the id of 1). And if it already exists, it should increment all values by 1. But the problem here is that it adds another document every time, instead of updating the already existing one.",
     "How can I just increment the value of 1 if document already exists, instead of adding another document every time? I only want to have 1 document at any given time."
    ],
    "question": [
     "Upsert is not updating existing document"
    ]
   },
   "https://stackoverflow.com/questions/64413626/tradingview-widget-to-discord-channel": {
    "answer": [
     "How do i link a discord client to the trading view widget that is written in Html. I was trying to have it so a user can call the live widget on command, but i don't  know how to pass html to the discord client.  Any help would be extremely helpful."
    ],
    "question": [
     "Tradingview widget to Discord channel"
    ]
   },
   "https://stackoverflow.com/questions/64413644/if-key-pressed-then-javascript": {
    "answer": [
     "I am basically terrible at everything i do but... I made https://mikesgames.neocities.org/Games/Cursor%20Counter/counter.html for me and my friends at school (i'm in middle school so it doesn't have to be perfect)  and want to make something where whenever someone presses the key n then it gives them 10,000 points (in my game its cursors) i believe i will need javascript for this.I have a little cheat button like this-",
     "but i don't want a visible button so i was gonna make it a key.\nPlease don't hate me as i know my question doesn't look as good as others.",
     "btw im using https://glitch.com"
    ],
    "question": [
     "If key pressed then, Javascript"
    ]
   },
   "https://stackoverflow.com/questions/64413673/how-can-i-change-the-colour-of-the-font-of-whole-web-page-using-javascript": {
    "answer": [
     "I want to change font colour using JavaScript of a web page, I've made a button in my html code, after pressing that button i want my font to change it's colour. Any ideas?",
     "I suggest to swap files upon that button click (using JS) to the other CSS file where the font color has changed but with same content.",
     "Try something like this",
     "",
     ""
    ],
    "question": [
     "How can i change the colour of the font of whole web page using JavaScript? [duplicate]"
    ]
   },
   "https://stackoverflow.com/questions/64413735/detect-face-with-ml5-faceapi": {
    "answer": [
     "I was going through this example where we can use faceApi \u0026 ml5 to show face landmarks.",
     "https://editor.p5js.org/ml5/sketches/FaceApi_Image_Landmarks",
     "From ml5's documentation, I understand that we can also just detect the face. For example, in faceApi's documentation, we see examples of how we use tv show posters to predict names of the characters. I know this is possible in tensorflow but I am unable to figure out if it's possible to obtain a name/description in ml5.",
     "I am trying this but I dont see any sort of name in the results obtained:",
     "p5 editor link: https://editor.p5js.org/neeha.hammad/present/E-ryEHPhh"
    ],
    "question": [
     "detect face with ml5 \u0026 faceApi"
    ]
   },
   "https://stackoverflow.com/questions/64413737/making-a-complex-shape-like-an-octagon-with-css": {
    "answer": [
     "I want to create a octagon, with an inner octagon within in, the inner octagon will be divided in sections, with each section forming a new shape with names in it.",
     "The octagon will also have trees at its edges. Any help is appreciated.",
     "All have managed to do is create an octagon with the css below",
     "See image for clarity. Octagon image"
    ],
    "question": [
     "Making a complex shape like an octagon with css"
    ]
   },
   "https://stackoverflow.com/questions/64413746/userscript-label-circle-with-border": {
    "answer": [
     "I just want to change label border style to circle form:",
     "... But I just get angular form. What am I doing wrong?"
    ],
    "question": [
     "Userscript Label Circle with Border?"
    ]
   },
   "https://stackoverflow.com/questions/64413758/material-ui-autocomplete-add-item-with-multiple-select": {
    "answer": [
     "I tried out the Autocomplete example from Material UI. Its about an add option when entering a new value. Here is the link to the demo: https://codesandbox.io/s/material-demo-forked-lgeju?file=/demo.js\nWhat I am wondering about is that the value in the input isnt actually added to the options in this example so it doesnt actually work. Why is that so? Also I cant use it for multiple select, (via adding the property \"multiple\" to the Autocomplete) since this would produce a \"TypeError\nCannot read property 'length' of null\". Is there a way to make that work for multiple select?",
     "Would appreciate any help a lot."
    ],
    "question": [
     "Material UI Autocomplete add item with multiple select"
    ]
   },
   "https://stackoverflow.com/questions/64413779/responsive-navbar-in-react": {
    "answer": [
     "I want to have a responsive navbar in React, when the screen is smaller than 865px the navbar of the pc version will dissapear and a hamburger menu will appear. How can i do that ?"
    ],
    "question": [
     "Responsive navbar in React"
    ]
   },
   "https://stackoverflow.com/questions/64413794/nativescript-vue-7-nativescript-iqkeyboardmanager-not-working-on-ios": {
    "answer": [
     "I'm writing cross-platform mobile application using Nativescript-Vue https://nativescript-vue.org/",
     "I have some problem with ios keyboard (keyboard overlaps inputs) and for fix it I am trying to use library for iOS keyboard https://github.com/tjvantoll/nativescript-IQKeyboardManager",
     "I register Vue component in main.js",
     "After run application fails with this error"
    ],
    "question": [
     "Nativescript-Vue 7 @nativescript/iqkeyboardmanager not working on iOS"
    ]
   }
  }
 }
}